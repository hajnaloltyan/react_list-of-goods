{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","item1","item2","LENGTH","length","ALPHABET","localeCompare","reverse","console","log","App","state","NONE","sortAlphabetically","setState","sortLength","reversing","resetting","this","reorderOptions","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAezB,OAbAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKX,EAASY,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAITJ,EACKC,EAAaQ,WAItBC,QAAQC,IAAIZ,EAAUC,GAEfC,I,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNd,SAAUJ,EAASmB,KACnBd,YAAY,GAHhB,EAMEe,mBAAqB,WACnB,EAAKC,SAAS,CAAEjB,SAAUJ,EAASY,YAPvC,EAUEU,WAAa,WACX,EAAKD,SAAS,CAAEjB,SAAUJ,EAASU,UAXvC,EAcEa,UAAY,WACV,EAAKF,UAAS,SAACH,GAAD,MAAY,CAAEb,YAAaa,EAAMb,gBAfnD,EAkBEmB,UAAY,WACV,EAAKH,SAAS,CAAEjB,SAAUJ,EAASmB,KAAMd,YAAY,KAnBzD,4CAsBE,WACE,MAGIoB,KAAKP,MAFPd,EADF,EACEA,SACAC,EAFF,EAEEA,WAGIqB,EAAiB,CAAEtB,WAAUC,cAEnC,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASJ,KAAKL,mBACdO,UAAWG,IACT,iBACA,CACE,WAAY1B,IAAaJ,EAASY,WANxC,iCAaA,wBACEgB,KAAK,SACLC,QAASJ,KAAKH,WACdK,UAAWG,IACT,oBACA,CACE,WAAY1B,IAAaJ,EAASU,SANxC,4BAaA,wBACEkB,KAAK,SACLC,QAASJ,KAAKF,UACdI,UAAWG,IACT,oBACA,CACE,YAA2B,IAAfzB,IANlB,sBAaED,IAAaJ,EAASmB,OAAuB,IAAfd,IAC9B,wBACEuB,KAAK,SACLC,QAASJ,KAAKD,UACdG,UAAU,4BAHZ,sBAUJ,6BACGzB,EAAkBD,EAAiByB,GAAgBK,KAAI,SAAAC,GAAI,OAC1D,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eArFrB,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9680aca2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return item1.length - item2.length;\n\n      case SortType.ALPHABET:\n        return item1.localeCompare(item2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ninterface State {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reversing = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  resetting = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    const reorderOptions = { sortType, isReversed };\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortAlphabetically}\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortLength}\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reversing}\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed === true) && (\n            <button\n              type=\"button\"\n              onClick={this.resetting}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, reorderOptions).map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}